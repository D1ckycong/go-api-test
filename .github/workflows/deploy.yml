name: Deploy to Amazon ECS

on:
  push:
    branches: [master]

env:
  AWS_REGION: ap-northeast-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: go-api-test                 # set this to your Amazon ECR repository name
  ECS_SERVICE: go-api-service                # set this to your Amazon ECS service name
  ECS_CLUSTER: 20240709_go-api-test_yuh        # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: task-definition.json    # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: go-api-container                 # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      # ワークフローファイル内で利用できるように、リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # AWS のクレデンシャル情報を設定
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ECR にログイン
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # リポジトリ内の Dockerfile を使用して、イメージのビルド、タグ付けをして ECR にプッシュ
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: rails7-mysql
          #IMAGE_TAG: latest
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          #イメージのURLを保持
          echo "IMAGE_URL=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
          
      - name: Use IMAGE_URL
        run: |
          echo ${{ env.IMAGE_URL }}
          
      # ECSタスク定義のイメージID を新しくビルドしたイメージに更新。これにより新しいイメージがデプロイされる。
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URL }}

      # 新しいタスク定義でデプロイ。指定したタスク定義とクラスタ、サービスを使用して、既存のタスクを更新。
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
